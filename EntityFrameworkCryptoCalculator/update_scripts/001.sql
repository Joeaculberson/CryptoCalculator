USE [CryptoCalculator]
GO
/****** Object:  Table [dbo].[Integration]    Script Date: 1/3/2018 1:54:10 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

if OBJECT_ID('[dbo].[Transaction]') is not null
    drop table [dbo].[Transaction]
GO

if OBJECT_ID('[dbo].[Currency]') is not null
    drop table [dbo].[Currency]
GO

CREATE TABLE [dbo].[Currency](
	[CURRENCY_ID] [uniqueidentifier] NOT NULL,
	[NAME] [nvarchar](max) NOT NULL,
	[SYMBOL] [nvarchar](10) NOT NULL,
 CONSTRAINT [PK_Currency] PRIMARY KEY CLUSTERED 
(
	[CURRENCY_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[Currency] ADD  CONSTRAINT [DF_Currency_CURRENCY_ID]  DEFAULT (newsequentialid()) FOR [CURRENCY_ID]
GO

INSERT INTO Currency(NAME,SYMBOL) values
('Bitcoin', 'BTC'),
('Litecoin', 'LTC'),
('Ethereum', 'ETH'),
('Bitcoin Cash', 'BCH')

if OBJECT_ID('[dbo].[ef_Currency]') is not null
    drop view [dbo].[ef_Currency]
GO

create view [dbo].[ef_Currency] as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
select
    [CURRENCY_ID],
    [NAME],
    [SYMBOL]
from [dbo].[Currency]
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW',  @level1name = N'ef_Currency'
GO

if OBJECT_ID('[dbo].[ef_Currency_Insert]') is not null
    drop procedure [dbo].[ef_Currency_Insert]
GO

create procedure [dbo].[ef_Currency_Insert]
    @NAME nvarchar(max),
    @SYMBOL nvarchar(10)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    declare @ids table ([CURRENCY_ID] uniqueidentifier);

    if (0 = 1)
        select [CURRENCY_ID] from @ids;

    insert into [dbo].[Currency] (
        [NAME],
        [SYMBOL]
    )
    output inserted.[CURRENCY_ID] into @ids
    values (
        @NAME,
        @SYMBOL
    );

    select [CURRENCY_ID] from @ids;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Currency_Insert'
GO

if OBJECT_ID('[dbo].[ef_Currency_Update]') is not null
    drop procedure [dbo].[ef_Currency_Update]
GO

create procedure [dbo].[ef_Currency_Update]
    @CURRENCY_ID uniqueidentifier,
    @NAME nvarchar(max),
    @SYMBOL nvarchar(10)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    update [dbo].[Currency] set
        [NAME] = @NAME,
        [SYMBOL] = @SYMBOL
    where 
        CURRENCY_ID = @CURRENCY_ID;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Currency_Update'
GO

if OBJECT_ID('[dbo].[ef_Currency_Delete]') is not null
    drop procedure [dbo].[ef_Currency_Delete]
GO

create procedure [dbo].[ef_Currency_Delete]
    @CURRENCY_ID uniqueidentifier
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    delete from [dbo].[Currency]
    where 
        [CURRENCY_ID] = @CURRENCY_ID

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Currency_Delete'
GO

CREATE TABLE [dbo].[Transaction](
	[TRANSACTION_ID] [uniqueidentifier] NOT NULL,
	[USER_ID] [uniqueidentifier] NOT NULL,
	[TRANSACTION_TYPE_ID] [uniqueidentifier] NOT NULL,
	[INITIAL_CURRENCY] [uniqueidentifier] NOT NULL,
	[INITIAL_AMOUNT] [bigint] NOT NULL,
	[EXCHANGED_CURRENCY] [uniqueidentifier] NOT NULL,
	[EXCHANGED_AMOUNT] [bigint] NOT NULL,
	[INTEGRATION_ID] [uniqueidentifier] NOT NULL,
	[CREATED_ON] [datetime] NOT NULL,
	[FEE] [bigint] NOT NULL,
	[FEE_CURRENCY] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_Transaction] PRIMARY KEY CLUSTERED 
(
	[TRANSACTION_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[Transaction] ADD  CONSTRAINT [DF_Transaction_TRANSACTION_ID]  DEFAULT (newsequentialid()) FOR [TRANSACTION_ID]
GO

ALTER TABLE [dbo].[Transaction]  WITH CHECK ADD  CONSTRAINT [FK_Transaction_FeeCurrency] FOREIGN KEY([FEE_CURRENCY])
REFERENCES [dbo].[Currency] ([CURRENCY_ID])
GO

ALTER TABLE [dbo].[Transaction] CHECK CONSTRAINT [FK_Transaction_FeeCurrency]
GO

if OBJECT_ID('[dbo].[ef_Transaction]') is not null
    drop view [dbo].[ef_Transaction]
GO

create view [dbo].[ef_Transaction] as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
select
    [TRANSACTION_ID],
    [USER_ID],
    [TRANSACTION_TYPE_ID],
    [INITIAL_CURRENCY],
    [INITIAL_AMOUNT],
    [EXCHANGED_CURRENCY],
    [EXCHANGED_AMOUNT],
    [INTEGRATION_ID],
    [CREATED_ON],
    [FEE],
    [FEE_CURRENCY]
from [dbo].[Transaction]
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW',  @level1name = N'ef_Transaction'
GO

if OBJECT_ID('[dbo].[ef_Transaction_Insert]') is not null
    drop procedure [dbo].[ef_Transaction_Insert]
GO

create procedure [dbo].[ef_Transaction_Insert]
    @USER_ID uniqueidentifier,
    @TRANSACTION_TYPE_ID uniqueidentifier,
    @INITIAL_CURRENCY uniqueidentifier,
    @INITIAL_AMOUNT bigint,
    @EXCHANGED_CURRENCY uniqueidentifier,
    @EXCHANGED_AMOUNT bigint,
    @INTEGRATION_ID uniqueidentifier,
    @CREATED_ON datetime,
    @FEE bigint,
    @FEE_CURRENCY uniqueidentifier
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    declare @ids table ([TRANSACTION_ID] uniqueidentifier);

    if (0 = 1)
        select [TRANSACTION_ID] from @ids;

    insert into [dbo].[Transaction] (
        [USER_ID],
        [TRANSACTION_TYPE_ID],
        [INITIAL_CURRENCY],
        [INITIAL_AMOUNT],
        [EXCHANGED_CURRENCY],
        [EXCHANGED_AMOUNT],
        [INTEGRATION_ID],
        [CREATED_ON],
        [FEE],
        [FEE_CURRENCY]
    )
    output inserted.[TRANSACTION_ID] into @ids
    values (
        @USER_ID,
        @TRANSACTION_TYPE_ID,
        @INITIAL_CURRENCY,
        @INITIAL_AMOUNT,
        @EXCHANGED_CURRENCY,
        @EXCHANGED_AMOUNT,
        @INTEGRATION_ID,
        @CREATED_ON,
        @FEE,
        @FEE_CURRENCY
    );

    select [TRANSACTION_ID] from @ids;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Transaction_Insert'
GO

if OBJECT_ID('[dbo].[ef_Transaction_Update]') is not null
    drop procedure [dbo].[ef_Transaction_Update]
GO

create procedure [dbo].[ef_Transaction_Update]
    @TRANSACTION_ID uniqueidentifier,
    @USER_ID uniqueidentifier,
    @TRANSACTION_TYPE_ID uniqueidentifier,
    @INITIAL_CURRENCY uniqueidentifier,
    @INITIAL_AMOUNT bigint,
    @EXCHANGED_CURRENCY uniqueidentifier,
    @EXCHANGED_AMOUNT bigint,
    @INTEGRATION_ID uniqueidentifier,
    @CREATED_ON datetime,
    @FEE bigint,
    @FEE_CURRENCY uniqueidentifier
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    update [dbo].[Transaction] set
        [USER_ID] = @USER_ID,
        [TRANSACTION_TYPE_ID] = @TRANSACTION_TYPE_ID,
        [INITIAL_CURRENCY] = @INITIAL_CURRENCY,
        [INITIAL_AMOUNT] = @INITIAL_AMOUNT,
        [EXCHANGED_CURRENCY] = @EXCHANGED_CURRENCY,
        [EXCHANGED_AMOUNT] = @EXCHANGED_AMOUNT,
        [INTEGRATION_ID] = @INTEGRATION_ID,
        [CREATED_ON] = @CREATED_ON,
        [FEE] = @FEE,
        [FEE_CURRENCY] = @FEE_CURRENCY
    where 
        TRANSACTION_ID = @TRANSACTION_ID;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Transaction_Update'
GO

if OBJECT_ID('[dbo].[ef_Transaction_Delete]') is not null
    drop procedure [dbo].[ef_Transaction_Delete]
GO

create procedure [dbo].[ef_Transaction_Delete]
    @TRANSACTION_ID uniqueidentifier
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    delete from [dbo].[Transaction]
    where 
        [TRANSACTION_ID] = @TRANSACTION_ID

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Transaction_Delete'
GO


if OBJECT_ID('[dbo].[UserApiConnection]') is not null
    drop table [dbo].[UserApiConnection]
GO

if OBJECT_ID('[dbo].[User]') is not null
    drop table [dbo].[User]
GO

CREATE TABLE [dbo].[User](
	[USER_ID] [uniqueidentifier] NOT NULL,
	[USERNAME] [nvarchar](20) NOT NULL,
	[PASSWORD] [nvarchar](100) NOT NULL,
	[EMAIL] [nvarchar](max) NOT NULL,
 CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED 
(
	[USER_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[User] ADD  CONSTRAINT [DF_User_USER_ID]  DEFAULT (newsequentialid()) FOR [USER_ID]
GO

if OBJECT_ID('[dbo].[ef_User]') is not null
    drop view [dbo].[ef_User]
GO

create view [dbo].[ef_User] as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
select
    [USER_ID],
    [USERNAME],
    [PASSWORD],
    [EMAIL]
from [dbo].[User]
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW',  @level1name = N'ef_User'
GO

if OBJECT_ID('[dbo].[ef_User_Insert]') is not null
    drop procedure [dbo].[ef_User_Insert]
GO

create procedure [dbo].[ef_User_Insert]
    @USERNAME nvarchar(20),
    @PASSWORD nvarchar(100),
    @EMAIL nvarchar(max)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    declare @ids table ([USER_ID] uniqueidentifier);

    if (0 = 1)
        select [USER_ID] from @ids;

    insert into [dbo].[User] (
        [USERNAME],
        [PASSWORD],
        [EMAIL]
    )
    output inserted.[USER_ID] into @ids
    values (
        @USERNAME,
        @PASSWORD,
        @EMAIL
    );

    select [USER_ID] from @ids;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_User_Insert'
GO

if OBJECT_ID('[dbo].[ef_User_Update]') is not null
    drop procedure [dbo].[ef_User_Update]
GO

create procedure [dbo].[ef_User_Update]
    @USER_ID uniqueidentifier,
    @USERNAME nvarchar(20),
    @PASSWORD nvarchar(100),
    @EMAIL nvarchar(max)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    update [dbo].[User] set
        [USERNAME] = @USERNAME,
        [PASSWORD] = @PASSWORD,
        [EMAIL] = @EMAIL
    where 
        USER_ID = @USER_ID;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_User_Update'
GO

if OBJECT_ID('[dbo].[ef_User_Delete]') is not null
    drop procedure [dbo].[ef_User_Delete]
GO

create procedure [dbo].[ef_User_Delete]
    @USER_ID uniqueidentifier
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    delete from [dbo].[User]
    where 
        [USER_ID] = @USER_ID

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_User_Delete'
GO

CREATE TABLE [dbo].[UserApiConnection](
	[USER_API_CONNECTION_ID] [uniqueidentifier] NOT NULL,
	[INTEGRATION_ID] [uniqueidentifier] NOT NULL,
	[USER_ID] [uniqueidentifier] NOT NULL,
	[API_KEY] [nvarchar](max) NOT NULL,
	[API_SECRET] [nvarchar](max) NOT NULL,
 CONSTRAINT [PK_UserApiConnection] PRIMARY KEY CLUSTERED 
(
	[USER_API_CONNECTION_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[UserApiConnection] ADD  CONSTRAINT [DF_UserApiConnection_USER_API_CONNECTION_ID]  DEFAULT (newsequentialid()) FOR [USER_API_CONNECTION_ID]
GO

ALTER TABLE [dbo].[UserApiConnection]  WITH CHECK ADD  CONSTRAINT [FK_UserApiConnection_User] FOREIGN KEY([USER_ID])
REFERENCES [dbo].[User] ([USER_ID])
GO

ALTER TABLE [dbo].[UserApiConnection] CHECK CONSTRAINT [FK_UserApiConnection_User]
GO

if OBJECT_ID('[dbo].[ef_UserApiConnection]') is not null
    drop view [dbo].[ef_UserApiConnection]
GO

create view [dbo].[ef_UserApiConnection] as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
select
    [USER_API_CONNECTION_ID],
    [INTEGRATION_ID],
    [USER_ID],
    [API_KEY],
    [API_SECRET]
from [dbo].[UserApiConnection]
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW',  @level1name = N'ef_UserApiConnection'
GO

if OBJECT_ID('[dbo].[ef_UserApiConnection_Insert]') is not null
    drop procedure [dbo].[ef_UserApiConnection_Insert]
GO

create procedure [dbo].[ef_UserApiConnection_Insert]
    @INTEGRATION_ID uniqueidentifier,
    @USER_ID uniqueidentifier,
    @API_KEY nvarchar(max),
    @API_SECRET nvarchar(max)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    declare @ids table ([USER_API_CONNECTION_ID] uniqueidentifier);

    if (0 = 1)
        select [USER_API_CONNECTION_ID] from @ids;

    insert into [dbo].[UserApiConnection] (
        [INTEGRATION_ID],
        [USER_ID],
        [API_KEY],
        [API_SECRET]
    )
    output inserted.[USER_API_CONNECTION_ID] into @ids
    values (
        @INTEGRATION_ID,
        @USER_ID,
        @API_KEY,
        @API_SECRET
    );

    select [USER_API_CONNECTION_ID] from @ids;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_UserApiConnection_Insert'
GO

if OBJECT_ID('[dbo].[ef_UserApiConnection_Update]') is not null
    drop procedure [dbo].[ef_UserApiConnection_Update]
GO

create procedure [dbo].[ef_UserApiConnection_Update]
    @USER_API_CONNECTION_ID uniqueidentifier,
    @INTEGRATION_ID uniqueidentifier,
    @USER_ID uniqueidentifier,
    @API_KEY nvarchar(max),
    @API_SECRET nvarchar(max)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    update [dbo].[UserApiConnection] set
        [INTEGRATION_ID] = @INTEGRATION_ID,
        [USER_ID] = @USER_ID,
        [API_KEY] = @API_KEY,
        [API_SECRET] = @API_SECRET
    where 
        USER_API_CONNECTION_ID = @USER_API_CONNECTION_ID;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_UserApiConnection_Update'
GO

if OBJECT_ID('[dbo].[ef_UserApiConnection_Delete]') is not null
    drop procedure [dbo].[ef_UserApiConnection_Delete]
GO

create procedure [dbo].[ef_UserApiConnection_Delete]
    @USER_API_CONNECTION_ID uniqueidentifier
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    delete from [dbo].[UserApiConnection]
    where 
        [USER_API_CONNECTION_ID] = @USER_API_CONNECTION_ID

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_UserApiConnection_Delete'
GO




if OBJECT_ID('[dbo].[Integration]') is not null
    drop table [dbo].[Integration]
GO

CREATE TABLE [dbo].[Integration](
	[INTEGRATION_ID] [uniqueidentifier] NOT NULL,
	[NAME] [nvarchar](256) NOT NULL,
	[ENDPOINT] [nvarchar](max) NOT NULL,
 CONSTRAINT [PK_Integration_INTEGRATION_ID] PRIMARY KEY CLUSTERED 
(
	[INTEGRATION_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[Integration] ADD  CONSTRAINT [DF_Integration_ID]  DEFAULT (newsequentialid()) FOR [INTEGRATION_ID]
GO

if OBJECT_ID('[dbo].[ef_Integration]') is not null
    drop view [dbo].[ef_Integration]
GO

create view [dbo].[ef_Integration] as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
select
    [INTEGRATION_ID],
    [NAME],
    [ENDPOINT]
from [dbo].[Integration]
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW',  @level1name = N'ef_Integration'
GO

if OBJECT_ID('[dbo].[ef_Integration_Insert]') is not null
    drop procedure [dbo].[ef_Integration_Insert]
GO

create procedure [dbo].[ef_Integration_Insert]
    @NAME nvarchar(256),
    @ENDPOINT nvarchar(max)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    declare @ids table ([INTEGRATION_ID] uniqueidentifier);

    if (0 = 1)
        select [INTEGRATION_ID] from @ids;

    insert into [dbo].[Integration] (
        [NAME],
        [ENDPOINT]
    )
    output inserted.[INTEGRATION_ID] into @ids
    values (
        @NAME,
        @ENDPOINT
    );

    select [INTEGRATION_ID] from @ids;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Integration_Insert'
GO

if OBJECT_ID('[dbo].[ef_Integration_Update]') is not null
    drop procedure [dbo].[ef_Integration_Update]
GO

create procedure [dbo].[ef_Integration_Update]
    @INTEGRATION_ID uniqueidentifier,
    @NAME nvarchar(256),
    @ENDPOINT nvarchar(max)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    update [dbo].[Integration] set
        [NAME] = @NAME,
        [ENDPOINT] = @ENDPOINT
    where 
        INTEGRATION_ID = @INTEGRATION_ID;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Integration_Update'
GO

if OBJECT_ID('[dbo].[ef_Integration_Delete]') is not null
    drop procedure [dbo].[ef_Integration_Delete]
GO

create procedure [dbo].[ef_Integration_Delete]
    @INTEGRATION_ID uniqueidentifier
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    delete from [dbo].[Integration]
    where 
        [INTEGRATION_ID] = @INTEGRATION_ID

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Integration_Delete'
GO



if OBJECT_ID('[dbo].[TransactionType]') is not null
    drop table [dbo].[TransactionType]
GO

CREATE TABLE [dbo].[TransactionType](
	[TRANSACTION_TYPE_ID] [uniqueidentifier] NOT NULL,
	[NAME] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_TransactionType] PRIMARY KEY CLUSTERED 
(
	[TRANSACTION_TYPE_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[TransactionType] ADD  CONSTRAINT [DF_TransactionType_TRANSACTION_TYPE_ID]  DEFAULT (newsequentialid()) FOR [TRANSACTION_TYPE_ID]
GO





if OBJECT_ID('[dbo].[ef_TransactionType]') is not null
    drop view [dbo].[ef_TransactionType]
GO

create view [dbo].[ef_TransactionType] as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
select
    [TRANSACTION_TYPE_ID],
    [NAME]
from [dbo].[TransactionType]
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW',  @level1name = N'ef_TransactionType'
GO

if OBJECT_ID('[dbo].[ef_TransactionType_Insert]') is not null
    drop procedure [dbo].[ef_TransactionType_Insert]
GO

create procedure [dbo].[ef_TransactionType_Insert]
    @NAME nvarchar(50)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    declare @ids table ([TRANSACTION_TYPE_ID] uniqueidentifier);

    if (0 = 1)
        select [TRANSACTION_TYPE_ID] from @ids;

    insert into [dbo].[TransactionType] (
        [NAME]
    )
    output inserted.[TRANSACTION_TYPE_ID] into @ids
    values (
        @NAME
    );

    select [TRANSACTION_TYPE_ID] from @ids;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_TransactionType_Insert'
GO

if OBJECT_ID('[dbo].[ef_TransactionType_Update]') is not null
    drop procedure [dbo].[ef_TransactionType_Update]
GO

create procedure [dbo].[ef_TransactionType_Update]
    @TRANSACTION_TYPE_ID uniqueidentifier,
    @NAME nvarchar(50)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    update [dbo].[TransactionType] set
        [NAME] = @NAME
    where 
        TRANSACTION_TYPE_ID = @TRANSACTION_TYPE_ID;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_TransactionType_Update'
GO

if OBJECT_ID('[dbo].[ef_TransactionType_Delete]') is not null
    drop procedure [dbo].[ef_TransactionType_Delete]
GO

create procedure [dbo].[ef_TransactionType_Delete]
    @TRANSACTION_TYPE_ID uniqueidentifier
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    delete from [dbo].[TransactionType]
    where 
        [TRANSACTION_TYPE_ID] = @TRANSACTION_TYPE_ID

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_TransactionType_Delete'
GO

if OBJECT_ID('[dbo].[ef_Currency]') is not null
    drop view [dbo].[ef_Currency]
GO

create view [dbo].[ef_Currency] as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
select
    [CURRENCY_ID],
    [NAME],
    [SYMBOL]
from [dbo].[Currency]
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW',  @level1name = N'ef_Currency'
GO

if OBJECT_ID('[dbo].[ef_Currency_Insert]') is not null
    drop procedure [dbo].[ef_Currency_Insert]
GO

create procedure [dbo].[ef_Currency_Insert]
    @NAME nvarchar(max),
    @SYMBOL nvarchar(10)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    declare @ids table ([CURRENCY_ID] uniqueidentifier);

    if (0 = 1)
        select [CURRENCY_ID] from @ids;

    insert into [dbo].[Currency] (
        [NAME],
        [SYMBOL]
    )
    output inserted.[CURRENCY_ID] into @ids
    values (
        @NAME,
        @SYMBOL
    );

    select [CURRENCY_ID] from @ids;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Currency_Insert'
GO

if OBJECT_ID('[dbo].[ef_Currency_Update]') is not null
    drop procedure [dbo].[ef_Currency_Update]
GO

create procedure [dbo].[ef_Currency_Update]
    @CURRENCY_ID uniqueidentifier,
    @NAME nvarchar(max),
    @SYMBOL nvarchar(10)
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    update [dbo].[Currency] set
        [NAME] = @NAME,
        [SYMBOL] = @SYMBOL
    where 
        CURRENCY_ID = @CURRENCY_ID;

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Currency_Update'
GO

if OBJECT_ID('[dbo].[ef_Currency_Delete]') is not null
    drop procedure [dbo].[ef_Currency_Delete]
GO

create procedure [dbo].[ef_Currency_Delete]
    @CURRENCY_ID uniqueidentifier
as
/*****************************************************************************\
    Auto-Generated By: Cosairus Database Table Generator
\*****************************************************************************/
begin

    delete from [dbo].[Currency]
    where 
        [CURRENCY_ID] = @CURRENCY_ID

end
GO

exec sp_addextendedproperty @name = N'autogenerated',  @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'PROCEDURE',  @level1name = N'ef_Currency_Delete'
GO

